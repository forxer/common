import{_ as l,M as o,p as r,q as c,R as e,t,N as n,V as h,a1 as s}from"./framework-e03faf0e.js";const d={},u=e("h1",{id:"contributing",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#contributing","aria-hidden":"true"},"#"),t(" Contributing")],-1),p=e("p",null,[t("Contributions are "),e("strong",null,"welcome"),t(" and will be fully "),e("strong",null,"credited"),t(".")],-1),f=e("p",null,"We accept contributions via Pull Requests on GitHub:",-1),g={href:"https://github.com/Laravel-Lang/common/pulls",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/Laravel-Lang/publisher/pulls",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/Laravel-Lang/lang/pulls",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/Laravel-Lang/attributes/pulls",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/Laravel-Lang/http-statuses/pulls",target:"_blank",rel:"noopener noreferrer"},L=e("h2",{id:"how-can-i-add-localization",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#how-can-i-add-localization","aria-hidden":"true"},"#"),t(" How can I add localization?")],-1),k={href:"https://github.com/Laravel-Lang/lang",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/Laravel-Lang/attributes",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/Laravel-Lang/http-statuses",target:"_blank",rel:"noopener noreferrer"},j={href:"https://www.php.net",target:"_blank",rel:"noopener noreferrer"},y=e("li",null,[t("Install dependencies by running console command:"),e("div",{class:"language-bash","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"composer"),t(` update
`)])])])],-1),q={href:"https://laravel.com/docs/localization",target:"_blank",rel:"noopener noreferrer"},T={href:"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes",target:"_blank",rel:"noopener noreferrer"},I=e("code",null,"fr",-1),z=e("div",{class:"language-bash","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,`vendor/bin/lang create fr
`)])],-1),A=s('<li>This command will create all the necessary files and fill them with initial data. The files will be located in the <code>locales/{locale}</code> directory;</li><li>Keep in mind that the <code>*-inline.json</code> files does not come with Laravel and the idea of this file is not to put a specific name to each attribute (as in <code>validation.php</code>) but a generic name for the validation attributes. Therefore in the translations of this file the placeholder <code>:attribute</code> <strong>should not</strong> appear.</li><li>Add a pull request with the name of the language. For example:<div class="custom-container tip"><p>[fr]: Added new localization</p></div></li>',3),F=e("h2",{id:"how-can-i-fix-the-file",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#how-can-i-fix-the-file","aria-hidden":"true"},"#"),t(" How can I fix the file?")],-1),N={href:"https://github.com/Laravel-Lang/lang",target:"_blank",rel:"noopener noreferrer"},P={href:"https://github.com/Laravel-Lang/attributes",target:"_blank",rel:"noopener noreferrer"},S={href:"https://github.com/Laravel-Lang/http-statuses",target:"_blank",rel:"noopener noreferrer"},H=s(`<li>Update the files;<div class="custom-container tip"><p>Note that in inline files (<code>json-inline.json</code> and <code>php-inline.json</code>), keys are the &quot;non-inline&quot; option.</p><p>For example:</p><div class="language-json" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;The :attribute must be at least :length characters.&quot;</span><span class="token operator">:</span> <span class="token string">&quot;This field must be at least :length characters.&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div></div></li><li>Add a pull request with the name of the language<div class="custom-container tip"><p>ex: [fr]: Updated translations</p></div></li>`,2),C=s('<h2 id="what-is-the-difference-between-inline-files-and-non-inline-files" tabindex="-1"><a class="header-anchor" href="#what-is-the-difference-between-inline-files-and-non-inline-files" aria-hidden="true">#</a> What is the difference between &quot;inline&quot; files and &quot;non-inline&quot; files?</h2><ul><li><strong>php.json</strong> - contains translations of values for PHP localization files.</li><li><strong>php-inline.json</strong> - contains inline translations of values for PHP localization files.</li><li><strong>json.json</strong> - contains translations of values for JSON localization files.</li><li><strong>json-inline.json</strong> - contains inline translations of values for JSON localization files.</li></ul><p>At the same time, the Laravel Framework itself also contains JSON keys:</p>',3),E={href:"https://github.com/laravel/framework/blob/9.x/src/Illuminate/Auth/Notifications/VerifyEmail.php",target:"_blank",rel:"noopener noreferrer"},O={href:"https://github.com/Laravel-Lang/lang/blob/main/source/framework/9.x/framework.json",target:"_blank",rel:"noopener noreferrer"},V={href:"https://github.com/Laravel-Lang/http-statuses",target:"_blank",rel:"noopener noreferrer"},M={href:"https://github.com/Laravel-Lang/attributes",target:"_blank",rel:"noopener noreferrer"},J={href:"https://github.com/Laravel-Lang/translations-template",target:"_blank",rel:"noopener noreferrer"},R={href:"https://github.com/Laravel-Lang/lang/tree/main/source/jetstream",target:"_blank",rel:"noopener noreferrer"},W=e("h2",{id:"what-should-i-do-if-there-is-a-tag-whose-translation-is-the-same-as-in-english",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#what-should-i-do-if-there-is-a-tag-whose-translation-is-the-same-as-in-english","aria-hidden":"true"},"#"),t(" What should I do if there is a tag whose translation is the same as in English?")],-1),B=e("em",null,"completion status",-1),U=e("em",null,"status list",-1),G=s(`<p>We can avoid this situation in the following way:</p><ul><li><p>Fork this repository if you haven&#39;t already;</p></li><li><p>Create a <code>_excludes.json</code> file in the localization folder if it doesn&#39;t already exist;</p></li><li><p>This file contains an array of values for each exception.</p><div class="custom-container tip"><p>For example, we need to exclude Micronesia from the status check for Italian:</p><p><em>locales/it/json.json</em>:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;Micronesia, Federated States Of&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Micronesia&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>locales/it/_excludes.json</em>:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span>
    <span class="token string">&quot;Micronesia&quot;</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></li><li><p>Add these changes to the pull request you will send.</p></li></ul>`,2);function K(D,Q){const a=o("ExternalLinkIcon"),i=o("RouterLink");return r(),c("div",null,[u,p,f,e("ul",null,[e("li",null,[e("a",g,[t("Laravel Lang: Common"),n(a)])]),e("li",null,[e("a",m,[t("Laravel Lang: Publisher"),n(a)])]),e("li",null,[e("a",_,[t("Laravel Lang: Lang"),n(a)])]),e("li",null,[e("a",b,[t("Laravel Lang: Attributes"),n(a)])]),e("li",null,[e("a",v,[t("Laravel Lang: HTTP Statuses"),n(a)])])]),L,e("ul",null,[e("li",null,[t("Fork the desired repository ("),e("a",k,[t("Lang"),n(a)]),t(", "),e("a",w,[t("Attributes"),n(a)]),t(" or "),e("a",x,[t("HTTP Statuses"),n(a)]),t(");")]),e("li",null,[t("Make sure you have "),e("a",j,[t("PHP 8.1"),n(a)]),t(" or higher installed on your computer;")]),y,e("li",null,[t("Call the console command, passing in the argument the name of the localization to be added. Localization code must comply with "),e("a",q,[t("ISO-15897"),n(a)]),t(" and "),e("a",T,[t("ISO-639-1"),n(a)]),t(" (ex: "),I,t(" for French):"),z]),A]),F,e("ul",null,[e("li",null,[t("Fork the desired repository ("),e("a",N,[t("Lang"),n(a)]),t(", "),e("a",P,[t("Attributes"),n(a)]),t(" or "),e("a",S,[t("HTTP Statuses"),n(a)]),t(");")]),H]),C,e("ul",null,[e("li",null,[e("a",E,[t("laravel/framework#9.x/src/Illuminate/Auth/Notifications/VerifyEmail.php"),n(a)]),t("#L65-L68")]),e("li",null,[e("a",O,[t("Laravel-Lang/lang#main/source/framework/9.x/framework.json"),n(a)])])]),e("p",null,[t("At the same time, the project structure is not tied to specific packages or files. For example, the "),e("a",V,[t("Laravel-Lang/http-statuses"),n(a)]),t(" project contains translations of statuses, while "),e("a",M,[t("Laravel-Lang/attributes"),n(a)]),t(" contains attributes for validation files.")]),e("p",null,[t("Using the "),e("a",J,[t("template"),n(a)]),t(", you can create any project with any translation keys.")]),e("p",null,[t("This file structure allows you to support translation for several product versions at once. For example, "),e("a",R,[t("Jetstream"),n(a)]),t(" 1.x, 2.x, 3.x and dev versions.")]),W,e("p",null,[t("In some languages there are some strings whose translation is the same as in English. In this case, the script that generates the "),n(i,{to:"/status.html"},{default:h(()=>[t("status")]),_:1}),t(" adds them by default to the list of pending translations. This affects the "),B,t(" for this language which would never be marked in "),U,t(" with ( ✔) but with (❗) even if all other strings were translated.")]),G])}const Y=l(d,[["render",K],["__file","contributing.html.vue"]]);export{Y as default};
